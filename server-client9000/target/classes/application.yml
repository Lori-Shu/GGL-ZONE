server:
  port: 9000
  # servlet:
  #   context-path: /ServerClient9000
spring:
  application:
    name: ServerClient9000
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      url: jdbc:mysql://localhost:3306/ggl_zone?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8
      username: root
      password: guang20010427
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848     
    sentinel:
      transport:
        port: 8719
        dashboard: localhost:8080
  devtools:
    livereload:
      port: 35730
    
  servlet:
    multipart:
      enabled: true
      # 不限制文件大小
      max-file-size: -1
      # 不限制请求体大小
      max-request-size: -1
      # 临时IO目录
      location: E://GGL-ZONE-resources/tempio9000/
      # 不延迟解析
      resolve-lazily: false
      # 超过1Mb，就IO到临时目录
      file-size-threshold: 1MB
  redis:
    host: localhost
    port: 6379
    lettuce:
      pool:
        max-active: 20
        max-wait: -1
        max-idle: 5
        min-idle: 0
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
  profiles:
    active: dev
# mybatis:
#   mapper-locations: classpath:mapper/*.xml
#   configuration:
#     database-id: ggl_zone


# pagehelper:
#   helper-dialect: mysql  #数据库
#   reasonable: true
#   support-methods-arguments: true
#   params: count=countSql
#oauth2:
#  server:
#    url: http://localhost:8233
#security:
#  oauth2:
#    client:
#      client-id: admin
#      client-secret: 112233
#      user-authorization-uri: ${oauth2.server.url}/oauth/authorize
#      access-token-uri: ${oauth2.server.url}/oauth/token
#    resource:
#      jwt:
#        key-uri: ${oauth2.server.url}/oauth/token_key
feign:
  client:
    config:
      default:
        connectTimeout: 3600000
        readTimeout: 3600000
mybatis-plus:
  # configuration:
    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: deleted # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)  
      
# 日志配置
logging:
  level:
    # web日志
    # '[org.springframework.web]':  debug
    # security 日志
    # org.springframework.security: error
    # mybatis日志
    # '[com.baomidou.mybatisplus]':  debug
    root: warn
  # charset:
  #   # 输出控制台编码
  #   console: UTF-8
  #   # 输出文件编码
  #   file: UTF-8
  # 输出文件名及路径，不配置则不输出文件
  file:
    # 切记，该文件表示正在产出日志的日志文件。并不会打包，当文件大于max-file-size,会根据file-name-pattern格式打包
    # 名称为log/ota.log文件夹会在项目根目录下，打包后会在启动包同目录下；名称为/log/ota.log的文件夹会在项目所在磁盘的跟目录下
    path: E://GGL-ZONE/logs/server-client9000
    rollingpolicy:
      # 单文件的大小，默认10M, 超过之后打包成一个日志文件
      max-file-size: 1MB
      # 日志保存的天数
      max-history: 30
      # 打包文件格式,默认： ${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz,书写格式为：文件路径/文件名.%i.文件后缀,其中%i不可省去，否则无日志显示
      # 例如： 日期为：2021/11/5 ,则打包文件之后为： log/ota.2021-11-05.0.gz,0表示日志的第一部分，后续就是，1,2,3...
      # 如果是压缩包，里面会多一个名log/ota.2021-11-05.0的日志文件
      # 如下面的例子，打包之后为: log/2021-11/ota.2020-11-5.0.log，这是一个日志文件
      file-name-pattern: log/%d{yyyy-MM}/ota.%d{yyyy-MM-dd}.%i.log
# seata:
#   tx-service-group: my_test_tx_group
#   config:
#     type: nacos
#     nacos:
#       namespace: public
#       server-addr: 127.0.0.1:8848
#       group: SEATA_GROUP
#       username: nacos
#       password: nacos
#   registry:
#     type: nacos
#     nacos:
#       application: SeataServer
#       server-addr: 127.0.0.1:8848
#       group : SEATA_GROUP
#       namespace: public
#       username: nacos
#       password: nacos
      
      