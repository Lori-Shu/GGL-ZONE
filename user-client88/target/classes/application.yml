server:
  port: 88
  # servlet:
  #   context-path: /UserClient80
  
#  servlet:
#    session:
#      cookie:
#        name: OAUTH2SESSION3

spring:
  application:
    name: UserClient88
  # datasource:
  #   type: com.alibaba.druid.pool.DruidDataSource
  #   driver-class-name: com.mysql.cj.jdbc.Driver
  #   druid:
  #     url: jdbc:mysql://localhost:3306/ggl_zone?useUnicode=true&characterEncoding=utf-8&useSSL=false
  #     username: root
  #     password: guang20010427
  servlet:
    multipart:
      enabled: true
      # 不限制文件大小
      max-file-size: -1
      # 不限制请求体大小
      max-request-size: -1
      # 临时IO目录
      # location: E://GGL-ZONE-resources/tempio80/
      # 不延迟解析
      resolve-lazily: false
      # 超过1Mb，就IO到临时目录
      # file-size-threshold: 1MB
    
  cloud:
    # nacos:
    #   discovery:
    #     server-addr: localhost:8848
    openfeign:
    # 这里使用httpclient是不生效的必须是client
      client:
        config:
          default:
            connectTimeout: 3600000
            readTimeout: 3600000
    consul:
      # Consul 服务器地址
      host: 106.14.238.5
      port: 8500
      # 配置中心相关配置
      # config:
      #   # 是否启用配置中心,默认值 true 开启
      #   enabled: true
      #   # 设置配置的基本文件夹,默认值config 可以理解为配置文件所在的最外层文件夹
      #   prefix: config
      #   # 设置应用的文件夹名称,默认值application 一般建议设置为微服务应用名称
      #   default-context: orderService
      #   # 配置环境分隔符,默认值","和default-context配置项搭配
      #   # 例如应用orderService 分别有环境 default, dev, test, prod
      #   # 只需 config 文件下创建 orderService, orderService-dev, orderService-test, orderService-prod文件夹
      #   profile-separator: '-'
      #   # 指定配置格式为yamL
      #   format: yaml
      #   # Consul Key/Values 中的Key, Value 对应整个配置文件
      #   data-key: orderServiceConfig
      #   # 以上配置可以理解为:加载 config/orderService/ 文件夹下Key 为orderServiceConfig 的Value 对应的配置
      #   watch:
      #     # 是否开启自动刷新,默认值true 开启
      #     enabled: true
      #     # 刷新频率,单位:毫秒,默认值1000
      #     delay: 1000
      discovery:
        register: true                             # 是否需要注册
        instance-id: ${spring.application.name}-01 # 注册实例id（必须唯一）
        service-name: ${spring.application.name}   # 服务名称
        port: ${server.port}                       # 服务端口（默认就是当前服务端口）
        prefer-ip-address: true                    # 是否使用ip地址注册(开启后可以在web界面看到实例ip)
        # ip-address: ${spring.cloud.client.ip-address} # 服务请求ip（默认就是当前服务ip）
  devtools:
    livereload:
      port: 35731
  data:    
    redis:
      host: 106.14.238.5
      port: 6379
      password: guang20010427
      lettuce:
        pool:
          max-active: 20
          # max-wait: -1
          max-idle: 5
          min-idle: 0
logging:
  level:
    root: info
#oauth2:
#  server:
#    url: http://localhost:8233
#security:
#  oauth2:
#    client:
#      client-id: admin
#      client-secret: 112233
#      user-authorization-uri: ${oauth2.server.url}/oauth/authorize
#      access-token-uri: ${oauth2.server.url}/oauth/token
#    resource:
#      jwt:
#        key-uri: ${oauth2.server.url}/oauth/token_key
